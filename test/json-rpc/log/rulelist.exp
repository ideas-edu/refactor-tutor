{ "result":
    [ { "name": "compland.sort"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "complor.sort"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "defequiv.inv"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "defimpl.inv"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "falsezeroor.inv"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.absorpand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.absorpor"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.andoveror"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.assocand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.assocor"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.absor"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.absor2"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.andcompl"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.andcompl.inv"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.buggy.andcompl2"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.andsame"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.assimp"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.assoc"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.commimp"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.defimpl.inv"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.demorgan1"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.demorgan2"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.demorgan3"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.demorgan3.inv"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.demorgan4"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.demorgan4.inv"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.demorgan5"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.distr"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.distr.inv"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.distrnot"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.equivelim1"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.equivelim2"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.equivelim3"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.falseprop"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.falseprop.inv"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.buggy.idemequi"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.idemequiv.inv"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.idemimp"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.idemimp.inv"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.implelim"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.implelim1"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.implelim2"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.implnotelim"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.notoverimpl"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.orcompl"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.orcompl.inv"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.buggy.orcompl2"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.orsame"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.parenth1"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.parenth2"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.parenth3"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.trueprop"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.buggy.trueprop.inv"
      , "buggy": true
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.command"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.commor"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.compland"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.complor"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.defequiv"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.defimpl"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.demorganand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.demorganor"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.falsezeroand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.falsezeroor"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.genandoveror"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.gendemorganand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.gendemorganor"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.geninvdoublenegand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.geninvdoublenegor"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.genoroverand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.idempand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.idempor"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.invandoveror"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.invdemorganand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.invdemorganor"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.invidempand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.invidempor"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.invoroverand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": false
      }
    , { "name": "logic.propositional.notfalse"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.notnot"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.nottrue"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.oroverand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.truezeroand"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "logic.propositional.truezeroor"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "notfalse.inv"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "notnot.inv"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "nottrue.inv"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    , { "name": "truezeroand.inv"
      , "buggy": false
      , "arguments": 0
      , "rewriterule": true
      }
    ]
, "error": null
, "id": 421
, "version": "1.6 (893c5ef99623f5741cb221bd14b52c17d133cc69)"
}
